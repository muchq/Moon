load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_cross_binary", "go_library", "go_test")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

go_library(
    name = "r3dr_lib",
    srcs = [
        "config.go",
        "constants.go",
        "dto.go",
        "encoding.go",
        "main.go",
        "ping.go",
        "short_db.go",
        "shortener.go",
        "shortener_api.go",
        "url_dao.go",
    ],
    importpath = "github.com/muchq/moonbase/go/r3dr",
    visibility = ["//visibility:private"],
    deps = [
        "//go/mucks",
        "//go/resilience4g/rate_limit",
        "@com_github_lib_pq//:pq",
    ],
)

go_binary(
    name = "r3dr",
    embed = [":r3dr_lib"],
    visibility = ["//visibility:public"],
)

go_cross_binary(
    name = "r3dr_linux_amd64",
    platform = "@io_bazel_rules_go//go/toolchain:linux_amd64",
    target = ":r3dr",
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "r3dr_tar",
    srcs = [":r3dr_linux_amd64"],
    remap_paths = {"/r3dr_linux_amd64": "/r3dr"},
)

oci_image(
    name = "r3dr_image",
    base = "@docker_lib_ubuntu",
    entrypoint = ["/r3dr"],
    tars = [":r3dr_tar"],
)

oci_load(
    name = "oci_load_tarball",
    image = ":r3dr_image",
    repo_tags = ["ghcr.io/muchq/r3dr:latest"],
)

filegroup(
    name = "r3dr_oci.tar",
    srcs = [":oci_load_tarball"],
    output_group = "tarball",
)

go_test(
    name = "r3dr_test",
    size = "small",
    srcs = [
        "encoding_test.go",
        "shortener_test.go",
    ],
    embed = [":r3dr_lib"],
)
