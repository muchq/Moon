load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

# Packaging the binary into tar, which is needed by oci_image rule
pkg_tar(
    name = "example_cc_grpc_tar",
    srcs = ["//cpp/example_service"],
)

# Making image
# C++ programs usually need some fundamental libraries such as glibc, libstdc++, etc.
# Correspondigly, use language-specific distroless images.
# Here we use docker.io/library/ubuntu image for this C++ program.
oci_image(
    name = "example_cc_grpc_image",
    base = "@docker_lib_ubuntu",
    entrypoint = ["/example_service"],
    tars = [":example_cc_grpc_tar"],
)

# Create tarball from oci image that can be run by container runtime.
# The image is designated using `repo_tags` attribute.
oci_load(
    name = "example_cc_grpc_image_tarball",
    image = ":example_cc_grpc_image",
    repo_tags = ["example_cc_grpc:latest"],
)

filegroup(
    name = "example_cc_grpc_tarball.tar",
    srcs = [":example_cc_grpc_image_tarball"],
    output_group = "tarball",
)
